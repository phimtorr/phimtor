name: Build desktop app

on:
  workflow_call:
    inputs:
      server_address:
        description: 'Address of the server'
        required: true
        type: string
      firebase_api_key:
        description: 'Firebase API key'
        required: true
        type: string
    outputs:
      artifact_pattern:
        description: 'Pattern to download the artifact'
        value: 'desktop_app_*'

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
    runs-on: ${{ matrix.os }}
    env:
      SERVER_ADDR: ${{ inputs.server_address }}
      FIREBASE_API_KEY: ${{ inputs.firebase_api_key }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 50

      # Store the version, stripping any v-prefix
      - name: Write release version
        run: |
          VERSION=$(git describe --tags --always --match='v[0-9]*.[0-9]*.[0-9]*' 2> /dev/null | sed 's/^.//')
          if [ -z "$VERSION" ] || ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-.+)*$ ]]; then
            VERSION="0.0.0-$(git rev-parse --short HEAD)"
          fi
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      # Setup Golang
      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
          check-latest: true
          cache-dependency-path: desktop/go.mod
      - run: go version
        shell: bash

      # ---- MacOS-------
      - name: Install dependencies
        if: runner.os == 'macOS'
        run: |
          brew install create-dmg
        shell: bash
      # Build MacOS
      - name: Build MacOS
        if: runner.os == 'macOS'
        run: |
          ./desktop/build/build-macos.sh
        shell: bash
      # ---- End MacOS --------

      # ------ Windows --------
      # Build Windows
      - name: Install dependencies
        if: runner.os == 'Windows'
        run: |
          choco install rcedit -y
        shell: bash
      - name: Build Windows
        if: runner.os == 'Windows'
        run: |
          ./desktop/build/build-windows.sh
        shell: bash
      # ------ End Windows -------

      # ----- Linux --------
      # Build Linux
      - name: Build Linux
        if: runner.os == 'Linux'
        run: |
          ./desktop/build/build-linux.sh
        shell: bash
      # ----- End Linux -------

      # Upload build binaries
      - uses: actions/upload-artifact@v4
        with:
          name: desktop_binaries_${{runner.os}}
          path: |
            ${{github.workspace}}/desktop/bin/source/PhimTor.app/Contents/MacOS/*
            ${{github.workspace}}/desktop/bin/PhimTor/usr/bin/*
            ${{github.workspace}}\desktop\bin\*.exe

      # Upload build assets
      - uses: actions/upload-artifact@v4
        with:
          name: desktop_app_${{runner.os}}
          path: |
            ${{github.workspace}}/desktop/bin/*.pkg
            ${{github.workspace}}/desktop/bin/*.dmg
            ${{github.workspace}}/desktop/bin/*.deb
            ${{github.workspace}}\desktop\bin\*.exe

