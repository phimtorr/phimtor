name: Build Desktop App

permissions:
  contents: write

on:
  release: null
#  push:
#    branches:
#      - master

defaults:
  run:
    working-directory: ./desktop

jobs:
  build:
    strategy:
      fail-fast: true
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]

    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # Store the version, stripping any v-prefix
      - name: Write release version
        run: |
          VERSION=${GITHUB_REF_NAME#v}
          echo Original version: $VERSION
          if [ -z "$VERSION" ] || ! [[ "$VERSION" =~ ^[0-9]+\.[0-9]+\.[0-9]+(-.+)*$ ]]; then
            VERSION="0.0.0-$(git rev-parse --short HEAD)"
          fi
          echo Version: $VERSION
          echo "VERSION=$VERSION" >> $GITHUB_ENV
        shell: bash

      # Setup Golang
      - name: Setup Golang
        uses: actions/setup-go@v5
        with:
          go-version: 1.21
          check-latest: true
          cache-dependency-path: desktop/go.mod
      - run: go version
        shell: bash

      # ---- MacOS-------
      # Build MacOS
      - name: Build MacOS
        if: runner.os == 'macOS'
        run: |
          ./build/build-macos.sh
        shell: bash
      # ---- End MacOS --------

      # ------ Windows --------
      # Build Windows
      - name: Install dependencies
        if: runner.os == 'Windows'
        run: |
          choco install rcedit -y
        shell: bash
      - name: Build Windows
        if: runner.os == 'Windows'
        run: |
          ./build/build-windows.sh
        shell: bash
      # ------ End Windows -------

      # ----- Linux --------
      #      - name: Install dependencies
      #        if: runner.os == 'Linux'
      #        run: |
      #          sudo apt-get update
      #          sudo apt-get install gcc libgtk-3-dev libayatana-appindicator3-dev
      #        shell: bash
      # Build Linux
      - name: Build Linux
        if: runner.os == 'Linux'
        run: |
          ./build/build-linux.sh
        shell: bash
      # ----- End Linux -------

      # Upload build assets
      - uses: actions/upload-artifact@v4
        with:
          name: PhimTor_${{runner.os}}
          path: |
            ${{github.workspace}}/desktop/bin/*.pkg
            ${{github.workspace}}/desktop/bin/*.deb
            ${{github.workspace}}\desktop\bin\*.exe

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: |
            **/bin/*.pkg
            **/bin/*.deb
            **/bin/*.exe
