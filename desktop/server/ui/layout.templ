package ui 

import "github.com/go-chi/chi/v5"
import "github.com/phimtorr/phimtor/desktop/server/uri"
import "github.com/phimtorr/phimtor/desktop/i18n"
import "github.com/phimtorr/phimtor/desktop/auth"

templ layout(title string) {
	<!DOCTYPE html>
	<html lang="en">
		<head>
			<meta charset="UTF-8"/>
			<meta name="viewport" content="width=device-width, initial-scale=1"/>
			<link rel="icon" type="image/x-icon" href="/static/assets/favicon.ico"/>
			<link href="/static/style/output.css" rel="stylesheet"/>
			<script src="https://kit.fontawesome.com/aff606e071.js" crossorigin="anonymous"></script>
			<script src="https://unpkg.com/htmx.org@1.9.10" integrity="sha384-D1Kt99CQMDuVetoL1lrYwg5t+9QdHe7NLX/SoJYkXDFfX37iInKRy5xLSi8nO7UC" crossorigin="anonymous"></script>
			<script src="https://unpkg.com/htmx.org/dist/ext/response-targets.js"></script>
			<title>{ title }</title>
		</head>
		<body class="box-border flex flex-col min-h-screen w-full bg-stone-900 text-slate-100" hx-ext="response-targets">
			<nav class="flex items-center justify-between bg-stone-800 px-4 py-4">
				<div class="flex flex-shrink-0 items-center">
					<span class="text-xl font-bold">PhimTor</span>
				</div>
				<div class="flex-grow px-4">
					<form class="max-w-md mx-auto" method="GET" action={ templ.SafeURL(uri.SearchShows("", 0)) }>
						<div class="relative">
							<div class="absolute inset-y-0 start-0 flex items-center ps-3 pointer-events-none">
								<svg class="w-4 h-4  text-slate-200" aria-hidden="true" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 20 20">
									<path stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="m19 19-4-4m0-7A7 7 0 1 1 1 8a7 7 0 0 1 14 0Z"></path>
								</svg>
							</div>
							<input type="search" id="default-search" name="q" class="block w-full p-4 ps-10 text-sm  border rounded-lg bg-stone-700 border-gray-600 placeholder-gray-400 focus:ring-gray-500 focus:border-gray-500" placeholder={ i18n.MustT(ctx, "Search.SearchBar.Placeholder") } required/>
							<button type="submit" class="text-white absolute end-2.5 bottom-2.5 focus:ring-4 focus:outline-none  font-medium rounded-sm text-sm px-4 py-2 bg-red-600 hover:bg-red-700 focus:ring-gray-600">{ i18n.T(ctx, "Search.SearchBar.Button") }</button>
						</div>
					</form>
				</div>
				<div class="flex">
					@menu()
				</div>
			</nav>
			<main class="box-border flex-grow bg-stone-900 p-4">
				{ children... }
			</main>
		</body>
	</html>
}

var menuItems = []struct {
	Link      string
	MessageID string
}{
	{uri.Home(), "Nav.Home"},
	{uri.GetSettings(), "Nav.Settings"},
}

func isCurrentPage(ctx context.Context, link string) bool {
	return chi.RouteContext(ctx).RoutePattern() == link
}

templ menu() {
	<ul class="flex">
		for _, item := range menuItems {
			@navLink(item.Link, item.MessageID)
		}
		if auth.IsSignedIn(ctx) {
			<li class="mr-6 p-2">
				<span>{ auth.CurrentUser(ctx).DisplayName }</span>
			</li>
			@navLink(uri.SignOut(), "Nav.SignOut")
		} else {
			@navLink(uri.SignIn(), "Nav.SignIn")
			@navLink(uri.SignUp(), "Nav.SignUp")
		}
	</ul>
}

templ navLink(link string, messageID string) {
	<li
		if isCurrentPage(ctx, link) {
			class="mr-6 border-b-2 border-red-700 p-2"
		} else {
			class="mr-6 p-2"
		}
	>
		<a class="hover:text-red-700" href={ templ.SafeURL(link) }>{ i18n.T(ctx, messageID) }</a>
	</li>
}
