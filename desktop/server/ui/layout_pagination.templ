package ui 


import "github.com/phimtorr/phimtor/desktop/client/api"
import "github.com/phimtorr/phimtor/desktop/i18n"

templ pagination(page, totalPage int, linkFn func(int) string) {
	<ul class="inline-flex -space-x-px">
		<li>
			<a
				if page == 1 {
					href="#"
				} else {
					href={ templ.SafeURL(linkFn(max(1, page-1))) }
				}
				class="ms-0 flex h-8 items-center justify-center rounded-s-lg border border-e-0 border-gray-400 bg-stone-800 px-3 leading-tight hover:bg-stone-600"
			>
				<i class="fa fa-angle-left"></i>
			</a>
		</li>
		if start, end := generateArroundPage(page, totalPage); true {
			if start > 1 {
				<li>
					<a
						href="#"
						class="flex h-8 items-center justify-center border border-gray-300 bg-stone-800 px-3 leading-tight hover:bg-stone-600"
						disabled
					>...</a>
				</li>
			}
			for i := start; i <= end; i++ {
				<li>
					<a
						
						if i == page {
							class="flex h-8 items-center justify-center border border-gray-300 bg-red-600 px-3 hover:bg-red-700"
							href="#"
						} else {
							class="flex h-8 items-center justify-center border border-gray-300 bg-stone-800 px-3 leading-tight hover:bg-stone-600"
							href={ templ.SafeURL(linkFn(i)) }
						}
					>{ toString(i) }</a>
				</li>
			}
			if end < totalPage {
				<li>
					<a
						href="#"
						class="flex h-8 items-center justify-center border border-gray-300 bg-stone-800 px-3 leading-tight hover:bg-stone-600"
						disabled
					>...</a>
				</li>
			}
		}
		<li>
			<a
				if page == totalPage {
					href="#"
				} else {
					href={ templ.SafeURL(linkFn(max(totalPage, page+1))) }
				}
				class="flex h-8 items-center justify-center rounded-e-lg border border-gray-300 bg-stone-800 px-3 leading-tight hover:bg-stone-600"
			><i class="fa fa-angle-right"></i></a>
		</li>
	</ul>
}

func generateArroundPage(page, totalPage int) (start, end int) {
	if totalPage <= 5 {
		return 1, totalPage
	}

	if page <= 3 {
		return 1, 5
	}

	if page >= totalPage-2 {
		return totalPage - 4, totalPage
	}

	return page - 2, page + 2
}

templ paginationInfo(pg api.Pagination) {
    <div class="flex items-center text-sm">
        { i18n.TWithData(ctx, "Pagination.Info", map[string]any{
            "Page": pg.Page,
            "TotalPages": pg.TotalPages,
            "TotalResults": pg.TotalResults,
        }, nil) }
    </div>
}
