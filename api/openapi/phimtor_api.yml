openapi: "3.0.2"
servers:
  - url: http://localhost:8080/api/v1
    description: Local server
info:
  title: PhimTor
  description: PhimTor API
  version: 1.0.0
  contact:
    name: Chien Nguyen
    email: chien.nm196@gmail.com

paths:
  /version:
    get:
      operationId: getVersion
      summary: Get version
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetVersionResponse
                type: object
                properties:
                  version:
                    type: string
                required:
                  - version
  /shows:
    get:
      operationId: listShows
      summary: List all shows
      parameters:
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
        - name: pageSize
          in: query
          required: false
          schema:
            type: integer
            default: 18
            minimum: 6
            maximum: 24
        - name: type
          in: query
          required: false
          schema:
            $ref: '#/components/schemas/ShowType'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: ListShowsResponse
                type: object
                properties:
                  shows:
                    type: array
                    items:
                      $ref: '#/components/schemas/Show'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - shows
                  - pagination
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

  /shows/search:
    get:
      operationId: searchShows
      summary: Search shows
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
        - name: page
          in: query
          required: false
          schema:
            type: integer
            default: 1
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchShowsResponse
                type: object
                properties:
                  shows:
                    type: array
                    items:
                      $ref: '#/components/schemas/Show'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - shows
                  - pagination
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"


  /movies/{id}:
    get:
      operationId: getMovie
      summary: Get movie by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetMovieResponse
                type: object
                properties:
                  movie:
                    $ref: '#/components/schemas/Movie'
                required:
                  - movie
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

  /series/{id}:
    get:
      operationId: getSeries
      summary: Get series by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetSeriesResponse
                type: object
                properties:
                  series:
                    $ref: '#/components/schemas/Series'
                required:
                  - series
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"
  /videos/{id}:
    get:
      operationId: getVideo
      summary: Get video by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetVideoResponse
                type: object
                properties:
                  video:
                    $ref: '#/components/schemas/Video'
                required:
                  - video
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

components:
  responses:
    BadRequest:
      description: bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            code: "decode-failed"
            message: "there is something wrong with your request body"
    InternalError:
      description: internal error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            code: "internal-error"
            message: "internal error"
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message
    Show:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        originalTitle:
          type: string
        posterLink:
          type: string
        type:
          $ref: '#/components/schemas/ShowType'
        releaseYear:
          type: integer
        score:
          type: number
        durationInMinutes:
          type: integer
        quantity:
          type: string
        totalEpisodes:
          type: integer
        currentEpisode:
          type: integer
      required:
        - id
        - title
        - originalTitle
        - posterLink
        - type
        - releaseYear
        - score
        - durationInMinutes
        - quantity
        - totalEpisodes
        - currentEpisode

    ShowType:
      type: string
      enum:
        - movie
        - series

    Pagination:
      type: object
      properties:
        page:
          type: integer
        totalPages:
          type: integer
        totalResults:
          type: integer
          format: int64
      required:
        - page
        - totalPages
        - totalResults

    Movie:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        originalTitle:
          type: string
        description:
          type: string
        posterLink:
          type: string
        quantity:
          type: string
        releaseYear:
          type: integer
        score:
          type: number
        durationInMinutes:
          type: integer
        videoId:
          type: integer
          format: int64
      required:
        - id
        - title
        - originalTitle
        - description
        - posterLink
        - quantity
        - releaseYear
        - score
        - durationInMinutes
        - videoId

    Series:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        originalTitle:
          type: string
        description:
          type: string
        posterLink:
          type: string
        releaseYear:
          type: integer
        score:
          type: number
        durationInMinutes:
          type: integer
        totalEpisodes:
          type: integer
        currentEpisode:
          type: integer
        episodes:
          type: array
          items:
            $ref: '#/components/schemas/Episode'
      required:
        - id
        - title
        - originalTitle
        - description
        - posterLink
        - releaseYear
        - score
        - durationInMinutes
        - totalEpisodes
        - currentEpisode
        - episodes

    Episode:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        videoId:
          type: integer
          format: int64
      required:
        - id
        - name
        - videoId

    Video:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        torrentLinks:
          type: array
          items:
            $ref: '#/components/schemas/TorrentLink'
        subtitles:
          type: array
          items:
            $ref: '#/components/schemas/Subtitle'
      required:
        - id
        - title
        - torrentLinks
        - subtitles

    TorrentLink:
      type: object
      properties:
        name:
          type: string
        link:
          type: string
        fileIndex:
          type: integer
        priority:
          type: integer
      required:
        - name
        - link
        - fileIndex
        - priority

    Subtitle:
      type: object
      properties:
        language:
          type: string
        name:
          type: string
        owner:
          type: string
        link:
          type: string
      required:
        - language
        - name
        - owner
        - link

