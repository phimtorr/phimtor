openapi: "3.0.2"
servers:
  - url: http://localhost:8080/api/v2
    description: Local server
info:
  title: PhimTor
  description: PhimTor API
  version: 2.0.0
  contact:
    name: Chien Nguyen
    email: chien.nm196@gmail.com

security:
  - bearerAuth: [ ]

paths:
  /version:
    get:
      operationId: getVersion
      summary: Get version
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetVersionResponse
                type: object
                properties:
                  version:
                    type: string
                required:
                  - version
  /shows/search:
    get:
      operationId: searchShows
      summary: Search shows
      parameters:
        - name: query
          in: query
          required: true
          schema:
            type: string
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: SearchShowsResponse
                type: object
                properties:
                  shows:
                    type: array
                    items:
                      $ref: '#/components/schemas/Show'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - shows
                  - pagination
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

  /shows/recently-added-movies:
    get:
      operationId: listRecentlyAddedMovies
      summary: List recently added movies
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetLatestMoviesResponse
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Show'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - movies
                  - pagination
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

  /shows/latest-movies:
    get:
      operationId: listLatestMovies
      summary: List latest movies
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetLatestMoviesResponse
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Show'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - movies
                  - pagination
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

  /shows/latest-tv-series:
    get:
      operationId: listLatestTvSeries
      summary: List latest tv series
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetLatestTvSeriesResponse
                type: object
                properties:
                  tvSeries:
                    type: array
                    items:
                      $ref: '#/components/schemas/Show'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - tvSeries
                  - pagination
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

  /shows/latest-episodes:
    get:
      operationId: listLatestEpisodes
      summary: List latest episodes
      parameters:
        - $ref: "#/components/parameters/page"
        - $ref: "#/components/parameters/pageSize"
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetLatestEpisodesResponse
                type: object
                properties:
                  episodes:
                    type: array
                    items:
                      $ref: '#/components/schemas/Show'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
                required:
                  - episodes
                  - pagination
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

  /movies/{movieId}:
    get:
      operationId: getMovie
      summary: Get movie by id
      parameters:
        - name: movieId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetMovieResponse
                type: object
                properties:
                  movie:
                    $ref: '#/components/schemas/Movie'
                required:
                  - movie
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

  /tv-series/{tvSeriesId}:
    get:
      operationId: getTvSeries
      summary: Get tv series by id
      parameters:
        - name: tvSeriesId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetTvSeriesResponse
                type: object
                properties:
                  tvSeries:
                    $ref: '#/components/schemas/TvSeries'
                required:
                  - tvSeries
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

  /tv-series/{tvSeriesId}/seasons/{seasonNumber}:
    get:
      operationId: getTvSeason
      summary: Get tv season by tv series id and season number
      parameters:
        - name: tvSeriesId
          in: path
          required: true
          schema:
            type: integer
            format: int64
        - name: seasonNumber
          in: path
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetTvSeasonResponse
                type: object
                properties:
                  tvSeason:
                    $ref: '#/components/schemas/TVSeason'
                required:
                  - tvSeason
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

  /videos/{id}:
    get:
      operationId: getVideo
      summary: Get video by id
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                title: GetVideoResponse
                type: object
                properties:
                  video:
                    $ref: '#/components/schemas/Video'
                required:
                  - video
        400:
          $ref: "#/components/responses/BadRequest"
        500:
          $ref: "#/components/responses/InternalError"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  parameters:
    page:
      name: page
      in: query
      required: false
      schema:
        type: integer
        default: 1
    pageSize:
      name: pageSize
      in: query
      required: false
      schema:
        type: integer
        default: 18
        minimum: 6
        maximum: 24
  responses:
    BadRequest:
      description: bad request
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            code: "decode-failed"
            message: "there is something wrong with your request body"
    InternalError:
      description: internal error
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/ErrorResponse"
          example:
            code: "internal-error"
            message: "internal error"
  schemas:
    ErrorResponse:
      type: object
      properties:
        code:
          type: string
        message:
          type: string
      required:
        - code
        - message

    Pagination:
      type: object
      properties:
        page:
          type: integer
        totalPages:
          type: integer
        totalResults:
          type: integer
          format: int64
      required:
        - page
        - totalPages
        - totalResults

    Show:
      type: object
      properties:
        id:
          type: integer
          format: int64
        showId:
          type: integer
          format: int64
        type:
          type: string
          enum:
            - movie
            - tv-series
            - episode
        title:
          type: string
        originalTitle:
          type: string
        posterLink:
          type: string
        airDate:
          type: string
          format: date
        runtime:
          type: integer
        voteAverage:
          type: number
        quality:
          type: string
        hasViSub:
          type: boolean
        seasonNumber:
          type: integer
          format: int
        episodeNumber:
          type: integer
          format: int
      required:
        - id
        - showId
        - type
        - title
        - originalTitle
        - posterLink
        - airDate
        - runtime
        - voteAverage
        - quality
        - hasViSub
        - seasonNumber
        - episodeNumber

    Movie:
      type: object
      properties:
        id:
          type: integer
          format: int64
        title:
          type: string
        originalTitle:
          type: string
        status:
          type: string
        tagline:
          type: string
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        overview:
          type: string
        posterLink:
          type: string
        backdropLink:
          type: string
        releaseDate:
          type: string
          format: date
        runtime:
          type: integer
        voteAverage:
          type: number
        videoID:
          type: integer
          format: int64
      required:
        - id
        - title
        - originalTitle
        - status
        - tagline
        - genres
        - overview
        - posterLink
        - backdropLink
        - releaseDate
        - runtime
        - voteAverage
        - videoID

    TvSeries:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        originalName:
          type: string
        status:
          type: string
        tagline:
          type: string
        genres:
          type: array
          items:
            $ref: '#/components/schemas/Genre'
        overview:
          type: string
        posterLink:
          type: string
        backdropLink:
          type: string
        firstAirDate:
          type: string
          format: date
        lastAirDate:
          type: string
          format: date
        voteAverage:
          type: number
        numberOfSeasons:
          type: integer
        numberOfEpisodes:
          type: integer
        seasons:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              seasonNumber:
                type: integer
              name:
                type: string
              posterLink:
                type: string
              overview:
                type: string
              airDate:
                type: string
                format: date
              voteAverage:
                type: number
            required:
              - id
              - seasonNumber
              - name
              - posterLink
              - overview
              - voteAverage

      required:
        - id
        - name
        - originalName
        - status
        - tagline
        - genres
        - overview
        - posterLink
        - backdropLink
        - voteAverage
        - numberOfSeasons
        - numberOfEpisodes
        - seasons

    TVSeason:
      type: object
      properties:
        id:
          type: integer
          format: int64
        seasonNumber:
          type: integer
        name:
          type: string
        posterLink:
          type: string
        overview:
          type: string
        airDate:
          type: string
          format: date
        voteAverage:
          type: number
        episodes:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              episodeNumber:
                type: integer
              name:
                type: string
              overview:
                type: string
              airDate:
                type: string
                format: date
              runtime:
                type: integer
              stillLink:
                type: string
              voteAverage:
                type: number
              videoID:
                type: integer
                format: int64
            required:
              - id
              - episodeNumber
              - name
              - overview
              - runtime
              - stillLink
              - voteAverage
              - videoID

      required:
        - id
        - seasonNumber
        - name
        - posterLink
        - overview
        - voteAverage
        - episodes

    Genre:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
      required:
        - id
        - name

    Video:
      type: object
      properties:
        id:
          type: integer
          format: int64
        torrentLinks:
          type: array
          items:
            $ref: '#/components/schemas/TorrentLink'
        premiumTorrentLinks:
          type: array
          items:
            $ref: '#/components/schemas/PremiumTorrentLink'
        subtitles:
          type: array
          items:
            $ref: '#/components/schemas/Subtitle'
      required:
        - id
        - title
        - torrentLinks
        - premiumTorrentLinks
        - subtitles

    TorrentLink:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        link:
          type: string
        fileIndex:
          type: integer
        priority:
          type: integer
        requirePremium:
          type: boolean
      required:
        - id
        - name
        - link
        - fileIndex
        - priority
        - requirePremium

    PremiumTorrentLink:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
        priority:
          type: integer
      required:
        - id
        - name
        - priority

    Subtitle:
      type: object
      properties:
        id:
          type: integer
          format: int64
        language:
          type: string
        name:
          type: string
        owner:
          type: string
        link:
          type: string
        priority:
          type: integer
      required:
        - id
        - language
        - name
        - owner
        - link
        - priority
